# Copyright The Linux Foundation and each contributor to LFX.
# SPDX-License-Identifier: MIT
---
{{- if and .Values.openfga.enabled (index .Values "fga-operator" "enabled") }}
apiVersion: extensions.fga-operator/v1
kind: AuthorizationModelRequest
metadata:
  name: {{ index .Values "fga-operator" "store" }}
  labels:
    {{- include "lfx-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: openfga
spec:
  instances:
    - version:
        major: 2
        minor: 1
        patch: 0
      authorizationModel: |
        model
          schema 1.1

        type user

        type team
          relations
            define member: [user]

        type project
          relations
            define parent: [project]
            define committee: [committee]
            define owner: [team#member] or owner from parent
            define writer: [user] or owner or writer from parent
            define auditor: [user, team#member] or writer or auditor from parent
            # The meeting_coordinator relation identifies a user who can manage any meeting
            # for a given project.
            define meeting_coordinator: [user]
            # The committee_viewer relation identifies a user who has committee access and 
            # can view the basic information of the project.
            define committee_viewer: writer from committee or auditor from committee
            define viewer: [user:*] or auditor or auditor from parent or committee_viewer

        type committee
          relations
            define member: [user]
            define parent: [committee]
            define project: [project]
            define owner: [team#member]
            define writer: [user] or owner
            define auditor: [user, team#member] or writer or auditor from project or meeting_coordinator from project
            define viewer: [user:*] or auditor or auditor from parent

        type groupsio_service
          relations
            define project: [project]
            define owner: owner from project
            define writer: writer from project or owner
            define auditor: auditor from project or writer
            define viewer: [user:*] or auditor from project

        type meeting
          relations
            define project: [project]
            define committee: [committee]
            # The organizer relation identifies a user who can manage this one meeting.
            # That means they can update the meeting details, invite/uninvite participants, etc.
            define organizer: [user] or meeting_coordinator from project or writer from project
            # The host relation identifies a user who is a host of this meeting.
            # This is different than the organizer relation because an organizer isn't necessarily
            # the user who is hosting the meeting, nor is the host necessarily the one who is
            # organizing the meeting. For example, a host may need to retrieve the Zoom host key
            # but shouldn't be able to update the meeting details.
            define host: [user] or organizer
            # The participant relation identifies a user who is a participant in this meeting.
            # This can either mean they are invited to the meeting or they attended the meeting
            # without being invited. In either case, they are a participant of that meeting.
            # Note that committee members are not automatically participants of meetings,
            # because the backend service needs to only include members from the committee
            # based on the voting status filters of that meeting. That is managed by the backend
            # services and therefore can't be a relationship in the authorization model.
            define participant: [user] or host
            # The viewer relation identifies a user who can view this meeting.
            # If the meeting is public, then any user can view it; but if it is private, then
            # only certain privileged users can view it.
            define viewer: [user:*] or participant or organizer or auditor from project
{{- end }}
